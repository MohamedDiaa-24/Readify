@model ProductVM;


<form method="post" enctype="multipart/form-data">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary text-center">@(Model.Product.Id != 0 ? "Update" : "Create") Product</h2>
            <hr/>
        </div>
        <input asp-for="Product.Id" class="form-control" hidden />
        <div class="mb-3 row">
            <label asp-for="Product.Title"></label>
            <input asp-for="Product.Title" class="form-control" />
            <span asp-validation-for="Product.Title" class="text-danger"></span>
        </div>
        <div class="mb-3 row">
            <textarea asp-for="Product.Description" class="form-control"></textarea>

            <label asp-for="Product.Description"></label>
            <span asp-validation-for="Product.Description" class="text-danger"></span>
        </div>
        <div class="mb-3 row">
            <label asp-for="Product.CategoryID"></label>
            <select asp-for="Product.CategoryID" asp-items="@Model.CategoryList" class="form-control">

                <option selected disabled>-- Select Category --</option>
            </select>
            <span asp-validation-for="Product.CategoryID" class="text-danger"></span>
        </div>
        <div class="mb-3 row">
            <label asp-for="Product.ISBN"></label>
            <input asp-for="Product.ISBN" class="form-control" />
            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
        </div>

        <div class="mb-3 row">
            <label asp-for="Product.Author"></label>
            <input asp-for="Product.Author" class="form-control" />
            <span asp-validation-for="Product.Author" class="text-danger"></span>
        </div>

        <div class="mb-3 row">
            <label asp-for="Product.ListPrice"></label>
            <input asp-for="Product.ListPrice" class="form-control" />
            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
        </div>

        <div class="mb-3 row">
            <label asp-for="Product.Price"></label>
            <input asp-for="Product.Price" class="form-control" />
            <span asp-validation-for="Product.Price" class="text-danger"></span>
        </div>

        <div class="mb-3 row">
            <label asp-for="Product.Price50"></label>
            <input asp-for="Product.Price50" class="form-control" />
            <span asp-validation-for="Product.Price50" class="text-danger"></span>
        </div>

        <div class="mb-3 row">
            <label asp-for="Product.Price100"></label>
            <input asp-for="Product.Price100" class="form-control" />
            <span asp-validation-for="Product.Price100" class="text-danger"></span>
        </div>
        <div class="mb-3 row">
            <label asp-for="Product.ImageURL"></label>
            <input type="file" class="form-control" />
            <span asp-validation-for="Product.ImageURL" class="text-danger"></span>
        </div>
   

       <div class="row">
           <div class="col-6">
               @if(Model.Product.Id!=0){

                <button type="submit" class="btn btn-primary form-control">Update</button>
               }
               else{

                <button type="submit" class="btn btn-primary form-control">Create</button>

               }
           </div> 
           <div class="col-6">
                <a asp-controller="Product" asp-action="Index" class="btn  border-dark form-control">Back to List</a>

           </div>
       </div>
    </div>
</form>

@section scripts{
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'image', 'link', 'lists',           
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}